# Generated by Django 3.1.4 on 2021-12-01 09:44

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AlertSendWaySetting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('used', models.BooleanField(default=False, verbose_name='是否启用')),
                ('env_id', models.IntegerField(default=0, verbose_name='环境id')),
                ('way_name', models.CharField(max_length=64, verbose_name='告警推送服务名称')),
                ('server_url', models.TextField(default='', verbose_name='告警推送服务url')),
                ('way_token', models.CharField(default='', max_length=255, verbose_name='服务token')),
                ('extra_info', models.JSONField(default=dict, verbose_name='服务其他信息')),
            ],
            options={
                'verbose_name': '告警推送通道设置',
                'verbose_name_plural': '告警推送通道设置',
                'db_table': 'omp_alert_send_way_setting',
            },
        ),
        migrations.CreateModel(
            name='ApplicationHub',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='创建时间', null=True, verbose_name='创建时间')),
                ('modified', models.DateTimeField(auto_now=True, help_text='更新时间', null=True, verbose_name='更新时间')),
                ('is_release', models.BooleanField(default=False, help_text='是否发布', verbose_name='是否发布')),
                ('app_type', models.IntegerField(choices=[(0, '组件'), (1, '服务')], default=0, help_text='应用类型', verbose_name='应用类型')),
                ('app_name', models.CharField(help_text='应用名称', max_length=256, verbose_name='应用名称')),
                ('app_version', models.CharField(help_text='应用版本', max_length=256, verbose_name='应用版本')),
                ('app_description', models.CharField(blank=True, help_text='应用描述', max_length=2048, null=True, verbose_name='应用描述')),
                ('app_port', models.TextField(blank=True, help_text='应用端口', null=True, verbose_name='应用端口')),
                ('app_dependence', models.TextField(blank=True, help_text='应用依赖', null=True, verbose_name='应用依赖')),
                ('app_install_args', models.TextField(blank=True, help_text='安装参数', null=True, verbose_name='安装参数')),
                ('app_controllers', models.TextField(blank=True, help_text='应用控制脚本', null=True, verbose_name='应用控制脚本')),
                ('app_logo', models.TextField(blank=True, help_text='应用图标', null=True, verbose_name='应用图标')),
                ('extend_fields', models.JSONField(blank=True, help_text='冗余字段', null=True, verbose_name='冗余字段')),
                ('is_base_env', models.BooleanField(default=False, help_text='是否为基础环境', verbose_name='是否为基础环境')),
                ('app_monitor', models.JSONField(blank=True, help_text='监控使用字段', null=True, verbose_name='监控使用字段')),
            ],
            options={
                'verbose_name': '应用商店服务',
                'verbose_name_plural': '应用商店服务',
                'db_table': 'omp_application',
            },
        ),
        migrations.CreateModel(
            name='ClusterInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='创建时间', null=True, verbose_name='创建时间')),
                ('modified', models.DateTimeField(auto_now=True, help_text='更新时间', null=True, verbose_name='更新时间')),
                ('is_deleted', models.BooleanField(default=False, help_text='软删除')),
                ('cluster_service_name', models.CharField(blank=True, help_text='集群所属服务', max_length=36, null=True, verbose_name='集群所属服务')),
                ('cluster_type', models.CharField(blank=True, help_text='集群类型', max_length=36, null=True, verbose_name='集群类型')),
                ('cluster_name', models.CharField(help_text='集群名称', max_length=64, verbose_name='集群名称')),
                ('connect_info', models.CharField(blank=True, help_text='集群连接信息', max_length=512, null=True, verbose_name='集群连接信息')),
                ('connect_info_parse_type', models.CharField(blank=True, help_text='连接信息解析方式', max_length=32, null=True, verbose_name='连接信息解析方式')),
            ],
            options={
                'verbose_name': '集群信息表',
                'verbose_name_plural': '集群信息表',
                'db_table': 'omp_cluster_info',
            },
        ),
        migrations.CreateModel(
            name='EmailSMTPSetting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_host', models.EmailField(max_length=254, null=True, verbose_name='邮箱SMTP主机地址:smtp.163.com')),
                ('email_port', models.IntegerField(null=True, verbose_name='邮箱SMTP端口:465')),
                ('email_host_user', models.CharField(max_length=128, null=True, verbose_name='邮箱SMTP服务器用户名:a@163.com')),
                ('email_host_password', models.CharField(max_length=128, null=True, verbose_name='邮箱SMTP服务器秘钥')),
            ],
            options={
                'verbose_name': '平台邮件服务器配置',
                'verbose_name_plural': '平台邮件服务器配置',
                'db_table': 'omp_email_smtp_setting',
            },
        ),
        migrations.CreateModel(
            name='Env',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='环境名称', max_length=256, verbose_name='环境名称')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='创建时间', null=True, verbose_name='创建时间')),
            ],
            options={
                'verbose_name': '环境',
                'verbose_name_plural': '环境',
                'db_table': 'omp_env',
            },
        ),
        migrations.CreateModel(
            name='GrafanaMainPage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('instance_name', models.CharField(help_text='信息面板实例名字', max_length=32, unique=True, verbose_name='实例名字')),
                ('instance_url', models.CharField(help_text='实例文根地址', max_length=255, unique=True, verbose_name='实例地址')),
            ],
            options={
                'verbose_name': 'grafana面板记录',
                'verbose_name_plural': 'grafana面板记录',
                'db_table': 'omp_grafana_url',
            },
        ),
        migrations.CreateModel(
            name='Host',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='创建时间', null=True, verbose_name='创建时间')),
                ('modified', models.DateTimeField(auto_now=True, help_text='更新时间', null=True, verbose_name='更新时间')),
                ('is_deleted', models.BooleanField(default=False, help_text='软删除')),
                ('instance_name', models.CharField(help_text='实例名', max_length=64, verbose_name='实例名')),
                ('ip', models.GenericIPAddressField(help_text='IP地址', verbose_name='IP地址')),
                ('port', models.IntegerField(default=22, help_text='SSH端口', verbose_name='SSH端口')),
                ('username', models.CharField(help_text='SSH登录用户名', max_length=256, verbose_name='SSH登录用户名')),
                ('password', models.CharField(help_text='SSH登录密码', max_length=256, verbose_name='SSH登录密码')),
                ('data_folder', models.CharField(default='/data', help_text='数据分区', max_length=256, verbose_name='数据分区')),
                ('service_num', models.IntegerField(default=0, help_text='服务个数', verbose_name='服务个数')),
                ('alert_num', models.IntegerField(default=0, help_text='告警次数', verbose_name='告警次数')),
                ('operate_system', models.CharField(help_text='操作系统', max_length=128, verbose_name='操作系统')),
                ('host_name', models.CharField(blank=True, help_text='主机名', max_length=64, null=True, verbose_name='主机名')),
                ('memory', models.IntegerField(blank=True, help_text='内存', null=True, verbose_name='内存')),
                ('cpu', models.IntegerField(blank=True, help_text='CPU', null=True, verbose_name='CPU')),
                ('disk', models.JSONField(blank=True, help_text='磁盘', null=True, verbose_name='磁盘')),
                ('host_agent', models.CharField(choices=[(0, '正常'), (1, '重启中'), (2, '启动失败'), (3, '部署中'), (4, '部署失败')], default=3, help_text='主机Agent状态', max_length=16, verbose_name='主机Agent状态')),
                ('monitor_agent', models.CharField(choices=[(0, '正常'), (1, '重启中'), (2, '启动失败'), (3, '部署中'), (4, '部署失败')], default=3, help_text='监控Agent状态', max_length=16, verbose_name='监控Agent状态')),
                ('host_agent_error', models.CharField(blank=True, help_text='主机Agent异常信息', max_length=256, null=True, verbose_name='主机Agent异常信息')),
                ('monitor_agent_error', models.CharField(blank=True, help_text='监控Agent异常信息', max_length=256, null=True, verbose_name='监控Agent异常信息')),
                ('is_maintenance', models.BooleanField(default=False, help_text='维护模式', verbose_name='维护模式')),
                ('agent_dir', models.CharField(default='/data', help_text='Agent安装目录', max_length=256, verbose_name='Agent安装目录')),
                ('env', models.ForeignKey(help_text='环境', null=True, on_delete=django.db.models.deletion.SET_NULL, to='db_models.env', verbose_name='环境')),
            ],
            options={
                'verbose_name': '主机',
                'verbose_name_plural': '主机',
                'db_table': 'omp_host',
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='HostThreshold',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('index_type', models.CharField(help_text='指标项名称', max_length=64)),
                ('condition', models.CharField(help_text='阈值条件', max_length=32)),
                ('condition_value', models.CharField(help_text='阈值数值，百分号格式', max_length=128)),
                ('alert_level', models.CharField(help_text='告警级别', max_length=32)),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('env_id', models.IntegerField(default=1, help_text='环境id')),
            ],
            options={
                'db_table': 'omp_host_threshold',
            },
        ),
        migrations.CreateModel(
            name='InspectionHistory',
            fields=[
                ('id', models.AutoField(help_text='自增主键', primary_key=True, serialize=False, unique=True)),
                ('inspection_name', models.CharField(help_text='报告名称:巡检类型名称', max_length=256)),
                ('inspection_type', models.CharField(default='service', help_text='巡检类型，service、host、deep', max_length=32)),
                ('inspection_status', models.IntegerField(default=0, help_text='巡检状态:1-进行中；2-成功；3-失败')),
                ('execute_type', models.CharField(default='man', help_text='执行方式: 手动-man；定时：auto', max_length=32)),
                ('inspection_operator', models.CharField(help_text='操作人员-当前登录人', max_length=16)),
                ('hosts', models.JSONField(blank=True, help_text="巡检主机:['10.0.9.158']", null=True)),
                ('services', models.JSONField(blank=True, help_text='巡检组件: [8,9]', null=True)),
                ('start_time', models.DateTimeField(auto_now_add=True, help_text='开始时间')),
                ('end_time', models.DateTimeField(help_text='结束时间，后端后补', null=True)),
                ('duration', models.IntegerField(default=0, help_text='巡检用时：单位s，后端后补')),
                ('send_email_result', models.IntegerField(choices=[('发送成功', 1), ('发送中', 2), ('发送失败', 0), ('未发送', 3)], default=3, verbose_name='邮件推送状态')),
                ('env', models.ForeignKey(help_text='当前环境id', null=True, on_delete=django.db.models.deletion.SET_NULL, to='db_models.env', verbose_name='当前环境id')),
            ],
            options={
                'verbose_name': '巡检记录历史表',
                'verbose_name_plural': '巡检记录历史表',
                'db_table': 'inspection_history',
                'ordering': ('-start_time',),
            },
        ),
        migrations.CreateModel(
            name='Labels',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label_name', models.CharField(help_text='标签名称', max_length=16, verbose_name='标签名称')),
                ('label_type', models.IntegerField(choices=[(0, '组件'), (1, '应用')], default=0, help_text='标签类型', verbose_name='标签类型')),
            ],
            options={
                'verbose_name': '应用产品标签表',
                'verbose_name_plural': '应用产品标签表',
                'db_table': 'omp_labels',
            },
        ),
        migrations.CreateModel(
            name='MainInstallHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='创建时间', null=True, verbose_name='创建时间')),
                ('modified', models.DateTimeField(auto_now=True, help_text='更新时间', null=True, verbose_name='更新时间')),
                ('operator', models.CharField(default='admin', help_text='用户', max_length=32, verbose_name='操作用户')),
                ('operation_uuid', models.CharField(help_text='部署操作uuid', max_length=36, verbose_name='部署操作uuid')),
                ('task_id', models.CharField(blank=True, help_text='异步任务id', max_length=36, null=True, verbose_name='异步任务id')),
                ('install_status', models.IntegerField(choices=[(0, '待安装'), (1, '安装中'), (2, '安装成功'), (3, '安装失败')], default=0, help_text='安装状态', verbose_name='安装状态')),
                ('install_args', models.JSONField(blank=True, help_text='主表安装信息', null=True, verbose_name='主表安装信息')),
                ('install_log', models.TextField(help_text='MAIN安装日志', verbose_name='MAIN安装日志')),
            ],
            options={
                'verbose_name': '主安装记录表',
                'verbose_name_plural': '主安装记录表',
                'db_table': 'omp_main_install_history',
            },
        ),
        migrations.CreateModel(
            name='Maintain',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('matcher_name', models.CharField(help_text='匹配标签', max_length=1024, verbose_name='匹配标签')),
                ('matcher_value', models.CharField(help_text='匹配值', max_length=1024, verbose_name='匹配值')),
                ('maintain_id', models.CharField(help_text='维护唯一标识', max_length=1024, verbose_name='维护唯一标识')),
            ],
            options={
                'verbose_name': '维护记录',
                'verbose_name_plural': '维护记录',
                'db_table': 'omp_maintain',
            },
        ),
        migrations.CreateModel(
            name='ModuleSendEmailSetting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('module', models.CharField(max_length=64, verbose_name='功能模块:BackupSetting,JobSetting')),
                ('send_email', models.BooleanField(default=False, verbose_name='是否开启邮件推送')),
                ('to_users', models.TextField(default='', verbose_name='邮箱接收用户')),
                ('env_id', models.IntegerField(default=1, verbose_name='环境id')),
            ],
            options={
                'verbose_name': '平台邮件发送账号配置',
                'verbose_name_plural': '平台邮件发送账号配置',
                'db_table': 'omp_module_email_send_setting',
            },
        ),
        migrations.CreateModel(
            name='MonitorUrl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='监控类别', max_length=32, unique=True, verbose_name='监控类别')),
                ('monitor_url', models.CharField(help_text='请求地址', max_length=128, verbose_name='请求地址')),
            ],
            options={
                'verbose_name': '监控地址记录',
                'verbose_name_plural': '监控地址记录',
                'db_table': 'omp_promemonitor_url',
            },
        ),
        migrations.CreateModel(
            name='OperateLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(help_text='操作用户', max_length=128, verbose_name='操作用户')),
                ('request_method', models.CharField(help_text='请求方法', max_length=32, verbose_name='请求方法')),
                ('request_ip', models.GenericIPAddressField(blank=True, help_text='请求源IP', null=True, verbose_name='请求源IP')),
                ('request_url', models.CharField(help_text='用户目标URL', max_length=256, verbose_name='用户目标URL')),
                ('description', models.CharField(help_text='用户行为描述', max_length=256, verbose_name='用户行为描述')),
                ('response_code', models.IntegerField(default=0, help_text='响应状态码', verbose_name='响应状态码')),
                ('request_result', models.TextField(default='success', help_text='请求结果', verbose_name='请求结果')),
                ('create_time', models.DateTimeField(auto_now_add=True, help_text='操作发生时间', verbose_name='操作发生时间')),
            ],
            options={
                'verbose_name': '用户操作记录',
                'verbose_name_plural': '用户操作记录',
                'db_table': 'omp_user_operate_log',
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='创建时间', null=True, verbose_name='创建时间')),
                ('modified', models.DateTimeField(auto_now=True, help_text='更新时间', null=True, verbose_name='更新时间')),
                ('ip', models.GenericIPAddressField(help_text='服务所在主机', verbose_name='服务所在主机')),
                ('service_instance_name', models.CharField(help_text='服务实例名称', max_length=64, verbose_name='服务实例名称')),
                ('service_port', models.TextField(blank=True, help_text='服务端口', null=True, verbose_name='服务端口')),
                ('service_controllers', models.JSONField(blank=True, help_text='服务控制脚本', null=True, verbose_name='服务控制脚本')),
                ('service_role', models.CharField(blank=True, help_text='服务角色', max_length=128, null=True, verbose_name='服务角色')),
                ('service_status', models.IntegerField(choices=[(0, '正常'), (1, '启动中'), (2, '停止中'), (3, '重启中'), (4, '停止'), (5, '未知'), (6, '安装中'), (7, '安装失败')], default=5, help_text='服务状态', verbose_name='服务状态')),
                ('alert_count', models.IntegerField(default=0, help_text='告警次数', verbose_name='告警次数')),
                ('self_healing_count', models.IntegerField(default=0, help_text='服务自愈次数', verbose_name='服务自愈次数')),
                ('service_dependence', models.TextField(blank=True, help_text='服务依赖关系', null=True, verbose_name='服务依赖关系')),
                ('cluster', models.ForeignKey(blank=True, help_text='所属集群', null=True, on_delete=django.db.models.deletion.SET_NULL, to='db_models.clusterinfo')),
                ('env', models.ForeignKey(blank=True, help_text='所属环境', null=True, on_delete=django.db.models.deletion.SET_NULL, to='db_models.env')),
                ('service', models.ForeignKey(blank=True, help_text='服务表外键', null=True, on_delete=django.db.models.deletion.SET_NULL, to='db_models.applicationhub')),
            ],
            options={
                'verbose_name': '服务实例表',
                'verbose_name_plural': '服务实例表',
                'db_table': 'omp_service',
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='ServiceConnectInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='创建时间', null=True, verbose_name='创建时间')),
                ('modified', models.DateTimeField(auto_now=True, help_text='更新时间', null=True, verbose_name='更新时间')),
                ('service_name', models.CharField(help_text='服务名', max_length=32, verbose_name='服务名')),
                ('service_username', models.CharField(blank=True, help_text='用户名', max_length=512, null=True, verbose_name='用户名')),
                ('service_password', models.CharField(blank=True, help_text='密码', max_length=512, null=True, verbose_name='密码')),
                ('service_username_enc', models.CharField(blank=True, help_text='加密用户名', max_length=512, null=True, verbose_name='加密用户名')),
                ('service_password_enc', models.CharField(blank=True, help_text='加密密码', max_length=512, null=True, verbose_name='加密密码')),
            ],
            options={
                'verbose_name': '用户名密码信息表',
                'verbose_name_plural': '用户名密码信息表',
                'db_table': 'omp_service_connect_info',
            },
        ),
        migrations.CreateModel(
            name='ServiceCustomThreshold',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_name', models.CharField(max_length=64, verbose_name='服务名称')),
                ('index_type', models.CharField(max_length=64, verbose_name='指标项名称')),
                ('condition', models.CharField(max_length=32, verbose_name='阈值条件')),
                ('condition_value', models.CharField(max_length=128, verbose_name='阈值数值')),
                ('alert_level', models.CharField(max_length=32, verbose_name='告警级别')),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('env_id', models.IntegerField(default=1, verbose_name='环境id')),
            ],
            options={
                'verbose_name': '服务定制指标阈值设置',
                'verbose_name_plural': '服务定制指标阈值设置',
                'db_table': 'omp_service_custom_threshold',
            },
        ),
        migrations.CreateModel(
            name='ServiceThreshold',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('index_type', models.CharField(max_length=64, verbose_name='指标项名称')),
                ('condition', models.CharField(max_length=32, verbose_name='阈值条件')),
                ('condition_value', models.CharField(max_length=128, verbose_name='阈值数值，百分号格式')),
                ('alert_level', models.CharField(max_length=32, verbose_name='告警级别')),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('env_id', models.IntegerField(default=1, verbose_name='环境id')),
            ],
            options={
                'db_table': 'omp_service_threshold',
            },
        ),
        migrations.CreateModel(
            name='UploadPackageHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='创建时间', null=True, verbose_name='创建时间')),
                ('modified', models.DateTimeField(auto_now=True, help_text='更新时间', null=True, verbose_name='更新时间')),
                ('is_deleted', models.BooleanField(default=False, help_text='软删除')),
                ('operation_uuid', models.CharField(help_text='唯一操作uuid', max_length=64, verbose_name='唯一操作uuid')),
                ('operation_user', models.CharField(blank=True, help_text='操作用户', max_length=64, null=True, verbose_name='操作用户')),
                ('package_name', models.CharField(help_text='安装包名称', max_length=256, verbose_name='安装包名称')),
                ('package_md5', models.CharField(help_text='安装包MD5值', max_length=64, verbose_name='安装包MD5值')),
                ('package_path', models.CharField(help_text='安装包路径', max_length=512, verbose_name='安装包路径')),
                ('package_status', models.IntegerField(choices=[(0, '成功'), (1, '失败'), (2, '解析中'), (3, '发布成功'), (4, '发布失败'), (5, '发布中')], default=2, help_text='安装包状态', verbose_name='安装包状态')),
                ('error_msg', models.CharField(blank=True, help_text='错误消息', max_length=1024, null=True, verbose_name='错误消息')),
                ('package_parent', models.ForeignKey(blank=True, help_text='父级包', null=True, on_delete=django.db.models.deletion.SET_NULL, to='db_models.uploadpackagehistory')),
            ],
            options={
                'verbose_name': '上传安装包记录',
                'verbose_name_plural': '上传安装包记录',
                'db_table': 'omp_upload_package_history',
            },
        ),
        migrations.CreateModel(
            name='ServiceHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(help_text='操作用户', max_length=128, verbose_name='操作用户')),
                ('description', models.CharField(help_text='用户行为描述', max_length=1024, verbose_name='用户行为描述')),
                ('result', models.CharField(default='success', help_text='操作结果', max_length=1024, verbose_name='操作结果')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='发生时间', null=True, verbose_name='发生时间')),
                ('service', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='db_models.service', verbose_name='服务')),
            ],
            options={
                'verbose_name': '服务操作记录',
                'verbose_name_plural': '服务操作记录',
                'db_table': 'omp_service_operate_log',
                'ordering': ('-created',),
            },
        ),
        migrations.AddField(
            model_name='service',
            name='service_connect_info',
            field=models.ForeignKey(blank=True, help_text='用户名密码信息', null=True, on_delete=django.db.models.deletion.SET_NULL, to='db_models.serviceconnectinfo'),
        ),
        migrations.CreateModel(
            name='ProductHub',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='创建时间', null=True, verbose_name='创建时间')),
                ('modified', models.DateTimeField(auto_now=True, help_text='更新时间', null=True, verbose_name='更新时间')),
                ('is_release', models.BooleanField(default=False, help_text='是否发布', verbose_name='是否发布')),
                ('pro_name', models.CharField(help_text='产品名称', max_length=256, verbose_name='产品名称')),
                ('pro_version', models.CharField(help_text='产品版本', max_length=256, verbose_name='产品版本')),
                ('pro_description', models.CharField(blank=True, help_text='产品描述', max_length=2048, null=True, verbose_name='产品描述')),
                ('pro_dependence', models.TextField(blank=True, help_text='产品依赖', null=True, verbose_name='产品依赖')),
                ('pro_services', models.TextField(blank=True, help_text='服务列表', null=True, verbose_name='服务列表')),
                ('pro_logo', models.TextField(blank=True, help_text='产品图标', null=True, verbose_name='产品图标')),
                ('extend_fields', models.JSONField(blank=True, help_text='冗余字段', null=True, verbose_name='冗余字段')),
                ('pro_labels', models.ManyToManyField(help_text='所属标签', to='db_models.Labels')),
                ('pro_package', models.ForeignKey(blank=True, help_text='安装包', null=True, on_delete=django.db.models.deletion.SET_NULL, to='db_models.uploadpackagehistory', verbose_name='安装包')),
            ],
            options={
                'verbose_name': '应用商店产品',
                'verbose_name_plural': '应用商店产品',
                'db_table': 'omp_product',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='创建时间', null=True, verbose_name='创建时间')),
                ('modified', models.DateTimeField(auto_now=True, help_text='更新时间', null=True, verbose_name='更新时间')),
                ('product_instance_name', models.CharField(blank=True, help_text='安装产品时输入的实例名称', max_length=64, null=True, verbose_name='产品实例名称')),
                ('product', models.ForeignKey(blank=True, help_text='所属产品', null=True, on_delete=django.db.models.deletion.SET_NULL, to='db_models.producthub')),
            ],
            options={
                'verbose_name': '产品实例表',
                'verbose_name_plural': '产品实例表',
                'db_table': 'omp_product_instance',
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='InspectionReport',
            fields=[
                ('id', models.AutoField(help_text='自增主键', primary_key=True, serialize=False, unique=True)),
                ('file_name', models.CharField(blank=True, help_text='导出文件名', max_length=128, null=True)),
                ('scan_info', models.JSONField(blank=True, help_text='扫描统计', null=True)),
                ('scan_result', models.JSONField(blank=True, help_text='分析结果', null=True)),
                ('risk_data', models.JSONField(blank=True, help_text='风险指标', null=True)),
                ('host_data', models.JSONField(blank=True, help_text='主机列表', null=True)),
                ('serv_plan', models.JSONField(blank=True, help_text='服务平面图', null=True)),
                ('serv_data', models.JSONField(blank=True, help_text='服务列表', null=True)),
                ('inst_id', models.OneToOneField(help_text='巡检记录历史表id', null=True, on_delete=django.db.models.deletion.SET_NULL, to='db_models.inspectionhistory', verbose_name='巡检记录历史表')),
            ],
            options={
                'verbose_name': '巡检任务 报告数据',
                'verbose_name_plural': '巡检任务 报告数据',
                'db_table': 'inspection_report',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='InspectionCrontab',
            fields=[
                ('id', models.AutoField(help_text='自增主键', primary_key=True, serialize=False, unique=True)),
                ('job_type', models.IntegerField(choices=[(0, '深度分析'), (1, '主机巡检'), (2, '组件巡检')], default=0, help_text='任务类型：0-深度分析 1-主机巡检 2-组建巡检')),
                ('job_name', models.CharField(help_text='任务名称', max_length=128)),
                ('is_start_crontab', models.IntegerField(default=0, help_text='是否开启定时任务：0-开启，1-关闭')),
                ('crontab_detail', models.JSONField(help_text='定时任务详情')),
                ('create_date', models.DateTimeField(auto_now_add=True, help_text='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, help_text='修改时间')),
                ('env', models.ForeignKey(help_text='环境', null=True, on_delete=django.db.models.deletion.SET_NULL, to='db_models.env', verbose_name='环境')),
            ],
            options={
                'verbose_name': '巡检任务 定时配置表',
                'verbose_name_plural': '巡检任务 定时配置表',
                'db_table': 'inspection_crontab',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='HostOperateLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(help_text='操作用户', max_length=128, verbose_name='操作用户')),
                ('description', models.CharField(help_text='用户行为描述', max_length=1024, verbose_name='用户行为描述')),
                ('result', models.CharField(default='success', help_text='操作结果', max_length=1024, verbose_name='操作结果')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='发生时间', null=True, verbose_name='发生时间')),
                ('host', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='db_models.host', verbose_name='主机')),
            ],
            options={
                'verbose_name': '主机操作记录',
                'verbose_name_plural': '主机操作记录',
                'db_table': 'omp_host_operate_log',
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='DetailInstallHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='创建时间', null=True, verbose_name='创建时间')),
                ('modified', models.DateTimeField(auto_now=True, help_text='更新时间', null=True, verbose_name='更新时间')),
                ('install_step_status', models.IntegerField(choices=[(0, '待安装'), (1, '安装中'), (2, '安装成功'), (3, '安装失败')], default=0, help_text='安装步骤状态', verbose_name='安装步骤状态')),
                ('send_flag', models.IntegerField(default=0, help_text='0-待发送 1-发送中 2-发送成功 3-发送失败', verbose_name='发包状态')),
                ('send_msg', models.TextField(help_text='发包日志', verbose_name='发包日志')),
                ('unzip_flag', models.IntegerField(default=0, help_text='0-待解压 1-解压中 2-解压成功 3-解压失败', verbose_name='解压包状态')),
                ('unzip_msg', models.TextField(help_text='解压日志', verbose_name='解压日志')),
                ('install_flag', models.IntegerField(default=0, help_text='0-待安装 1-安装中 2-安装成功 3-安装失败', verbose_name='安装执行状态')),
                ('install_msg', models.TextField(help_text='安装日志', verbose_name='安装日志')),
                ('init_flag', models.IntegerField(default=0, help_text='0-待初始化 1-初始化中 2-初始化成功 3-初始化失败', verbose_name='初始化执行状态')),
                ('init_msg', models.TextField(help_text='初始化日志', verbose_name='初始化日志')),
                ('start_flag', models.IntegerField(default=0, help_text='0-待启动 1-启动中 2-启动成功 3-启动失败', verbose_name='启动执行状态')),
                ('start_msg', models.TextField(help_text='启动日志', verbose_name='启动日志')),
                ('install_detail_args', models.JSONField(blank=True, help_text='详情表安装信息', null=True, verbose_name='详情表安装信息')),
                ('post_action_flag', models.IntegerField(default=0, help_text='0-待执行 1-执行中 2-执行成功 3-执行失败 4-无需执行', verbose_name='安装后执行动作标记')),
                ('post_action_msg', models.TextField(default='', help_text='安装后执行动作日志', verbose_name='安装后执行动作日志')),
                ('main_install_history', models.ForeignKey(blank=True, help_text='关联主安装记录', null=True, on_delete=django.db.models.deletion.SET_NULL, to='db_models.maininstallhistory')),
                ('service', models.ForeignKey(blank=True, help_text='关联服务对象', null=True, on_delete=django.db.models.deletion.SET_NULL, to='db_models.service')),
            ],
            options={
                'verbose_name': '安装记录详情表',
                'verbose_name_plural': '安装记录详情表',
                'db_table': 'omp_detail_install_history',
            },
        ),
        migrations.AddField(
            model_name='clusterinfo',
            name='service_connect_info',
            field=models.ForeignKey(blank=True, help_text='用户名密码信息', null=True, on_delete=django.db.models.deletion.SET_NULL, to='db_models.serviceconnectinfo'),
        ),
        migrations.AddField(
            model_name='applicationhub',
            name='app_labels',
            field=models.ManyToManyField(help_text='所属标签', to='db_models.Labels'),
        ),
        migrations.AddField(
            model_name='applicationhub',
            name='app_package',
            field=models.ForeignKey(blank=True, help_text='安装包', null=True, on_delete=django.db.models.deletion.SET_NULL, to='db_models.uploadpackagehistory', verbose_name='安装包'),
        ),
        migrations.AddField(
            model_name='applicationhub',
            name='product',
            field=models.ForeignKey(blank=True, help_text='所属产品', null=True, on_delete=django.db.models.deletion.SET_NULL, to='db_models.producthub', verbose_name='所属产品'),
        ),
        migrations.CreateModel(
            name='Alert',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_read', models.IntegerField(default=0, help_text='此消息是否已读，0-未读；1-已读', verbose_name='已读')),
                ('alert_type', models.CharField(default='', help_text='告警类型，主机host，服务service', max_length=32, verbose_name='告警类型')),
                ('alert_host_ip', models.CharField(default='', help_text='告警来源主机ip', max_length=64, verbose_name='告警主机ip')),
                ('alert_service_name', models.CharField(default='', help_text='服务类告警中的服务名称', max_length=128, verbose_name='告警服务名称')),
                ('alert_instance_name', models.CharField(default='', help_text='告警实例名称', max_length=128, verbose_name='告警实例名称')),
                ('alert_service_type', models.CharField(default='', help_text='服务所属类型', max_length=128, verbose_name='告警服务类型')),
                ('alert_level', models.CharField(default='', help_text='告警级别', max_length=1024, verbose_name='告警级别')),
                ('alert_describe', models.CharField(default='', help_text='告警描述', max_length=1024, verbose_name='告警描述')),
                ('alert_receiver', models.CharField(default='', help_text='告警接收人', max_length=256, verbose_name='告警接收人')),
                ('alert_resolve', models.CharField(default='', help_text='告警解决方案', max_length=1024, verbose_name='告警解决方案')),
                ('alert_time', models.DateTimeField(help_text='告警发生时间', verbose_name='告警发生时间')),
                ('create_time', models.DateTimeField(auto_now_add=True, help_text='告警信息入库时间', verbose_name='告警信息入库时间')),
                ('monitor_path', models.CharField(blank=True, help_text='跳转grafana路由', max_length=2048, null=True, verbose_name='跳转监控路径')),
                ('monitor_log', models.CharField(blank=True, help_text='跳转grafana日志页面路由', max_length=2048, null=True, verbose_name='跳转监控日志路径')),
                ('fingerprint', models.CharField(blank=True, help_text='告警的唯一标识', max_length=1024, null=True, verbose_name='告警的唯一标识')),
                ('env', models.ForeignKey(help_text='环境', null=True, on_delete=django.db.models.deletion.SET_NULL, to='db_models.env', verbose_name='环境')),
            ],
            options={
                'verbose_name': '告警记录',
                'verbose_name_plural': '告警记录',
                'db_table': 'omp_alert',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '用户',
                'verbose_name_plural': '用户',
                'db_table': 'omp_user_profile',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='applicationhub',
            unique_together={('app_name', 'app_version')},
        ),
    ]
